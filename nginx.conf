worker_processes auto;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Compression settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/javascript
        application/json
        application/x-javascript
        application/xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Brotli compression
    brotli on;
    brotli_comp_level 6;
    brotli_types
        application/javascript
        application/json
        application/x-javascript
        application/xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Cache settings
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    server {
        listen 8080;
        server_name localhost;

        root /home/runner/workspace/dist/public;
        index index.html;

        # Remove restrictive headers
        proxy_hide_header X-Robots-Tag;
        proxy_hide_header X-Frame-Options;
        proxy_hide_header X-Content-Type-Options;

        # Add SEO-friendly headers
        add_header X-Robots-Tag "index, follow" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Cache configuration
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
            access_log off;

            # Enable compression for these files
            gzip_static on;
            brotli_static on;
        }

        # Handle static files
        location / {
            try_files $uri $uri/ /index.html;

            # Enable compression
            gzip_static on;
            brotli_static on;

            # Add SEO-friendly headers for HTML pages
            add_header X-Robots-Tag "index, follow" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
        }

        # Proxy to Node.js application
        location /api {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # Remove restrictive headers for API responses
            proxy_hide_header X-Robots-Tag;
            proxy_hide_header X-Frame-Options;
            proxy_hide_header X-Content-Type-Options;
        }
    }
} 